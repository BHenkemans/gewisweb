<?php

use Application\View\HelperTrait;
use Decision\Form\Document as DocumentForm;
use Decision\Model\Enums\MeetingTypes;
use Decision\Model\Meeting as MeetingModel;
use Laminas\Form\Form;
use Laminas\View\Renderer\PhpRenderer;

/**
 * @var PhpRenderer|HelperTrait $this
 * @var DocumentForm $form
 * @var MeetingModel|null $meeting
 * @var int $number
 * @var MeetingTypes $type
 */

$this->scriptUrl()->requireUrls(
    [
        'admin_decision/delete_document',
        'admin_decision/rename_document',
    ],
    ['document_id'],
);

$this->breadcrumbs()
    ->addBreadcrumb($this->translate('Meetings'))
    ->addBreadcrumb($this->translate('Documents'));

if (isset($noMeetings) && $noMeetings): ?>
    <?= $this->translate('There are no meetings for which you can upload documents.') ?>
<?php
else:
    if (isset($success) && $success): ?>
        <?= $this->translate('Meeting document uploaded'); ?>
    <?php endif; ?>
    <?php
    $form->prepare();

    $form->setAttribute('method', 'post');

    $form->setAttribute('class', 'form-horizontal');
    ?>
    <?= $this->form()->openTag($form); ?>
    <?php
    $element = $form->get('meeting');
    ?>
    <div class="form-group">
        <label for="<?= $element->getName() ?>" class="control-label col-sm-2"><?= $element->getLabel() ?></label>
        <div class="col-sm-10">
            <select class="form-control" name="meeting" id="meeting-selector">
                <?php if (!empty($meetings)): ?>
                    <?php foreach ($meetings as $m): ?>
                        <option value="<?= $m->getType()->value ?>/<?= $m->getNumber() ?>"
                            <?= ($m->getNumber() === $number && $m->getType()->value === $type->value) ? 'selected' : '' ?>>
                            <?= $m->getType()->value ?> <?= $m->getNumber() ?> (<?= $m->getDate()->format('Y-m-d') ?>)
                        </option>
                    <?php endforeach; ?>
                <?php else: ?>
                    <option selected disabled><?= $this->translate('No meeting available.') ?></option>
                <?php endif; ?>
            </select>
        </div>
    </div>
    <div class="form-group">
        <?php
        $element = $form->get('name');
        $element->setAttribute('class', 'form-control');
        $element->setAttribute('placeholder', $this->translate('Name'));
        $element->setAttribute('required', 'required');
        ?>
        <label for="<?= $element->getName() ?>" class="control-label col-sm-2"><?= $element->getLabel() ?></label>
        <div class="col-sm-10">
            <?= $this->formText($element); ?>
            <?= $this->formElementErrors($element); ?>
        </div>
    </div>

    <div class="form-group">
        <?php $fileElement = $form->get('upload'); ?>
        <label for="<?= $fileElement->getName() ?>" class="control-label col-sm-2"><?= $fileElement->getLabel() ?></label>
        <div class="col-sm-10">
            <?= $this->formFile($fileElement); ?>
            <?= $this->formElementErrors($fileElement); ?>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <?php
            $submit = $form->get('submit');
            $submit->setLabel($submit->getValue());
            $submit->setAttribute('class', 'btn btn-default');
            ?>
            <?= $this->formButton($submit) ?>
        </div>
    </div>

    <?= $this->form()->closeTag(); ?>
    <?php if (null !== $meeting): ?>
        <h3><?= $this->translate('Documents for this meeting') ?></h3>
        <div class="col-sm-12">
            <?php if (0 === $meeting->getDocuments()->count()): ?>
                <p><?= $this->translate('This meeting does not have any associated documents.') ?></p>
            <?php else: ?>
                <?php $pastMeeting = $meeting->getDate() <= new DateTime('now'); ?>
                <span id="meeting-info"
                      data-meeting-type="<?= $meeting->getType()->value ?>"
                      data-meeting-number="<?= $meeting->getNumber() ?>">
                </span>
                <table class="table table-striped table-hover table-documents">
                    <?php foreach ($meeting->getDocuments() as $document): ?>
                        <tr data-id="<?= $document->getId() ?>">
                            <td class="btn-group-move">
                                <?php
                                /** @var Form $form */
                                $form = $this->reorderDocumentForm;

                                $form->setAttributes([
                                    'class' => 'form-reorder-document',
                                    'action' => $this->url('admin_decision/position_document/post')
                                ]);
                                $form->populateValues([
                                    'document' => $document->getId()
                                ]);
                                $form->prepare();
                                ?>
                                <?= $this->form()->openTag($form) ?>
                                <?php foreach ($form as $element): ?>
                                    <?= $this->formElement($element); ?>
                                <?php endforeach; ?>
                                <?= $this->form()->closeTag($form) ?>
                            </td>
                            <td>
                                <a href="<?= $this->url('decision/document', ['id' => $document->getId()]) ?>">
                                    <?= $this->escapeHtml($document->getName()) ?>
                                </a>
                            </td>
                            <td>
                                <button data-document-id="<?= $document->getId() ?>"
                                        data-document-name="<?= $this->escapeHtmlAttr($document->getName()) ?>"
                                        class="btn btn-primary btn-xs btn-rename">
                                    <?= $this->translate('Rename')?>
                                </button>
                                <button data-document-id="<?= $document->getId() ?>"
                                        data-document-name="<?= $this->escapeHtmlAttr($document->getName()) ?>"
                                        class="btn btn-primary btn-xs btn-delete">
                                    <?= $this->translate('Delete')?>
                                </button>
                            </td>
                        </tr>
                    <?php endforeach ?>
                </table>
                <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                                <h4 class="modal-title"><?= $this->translate('Delete Document') ?></h4>
                            </div>
                            <div class="modal-body">
                                <p>
                                    <?= sprintf(
                                        $this->translate(
                                            'Are you sure you want to delete %s?'
                                        ),
                                        '<strong id="delete-document-name"></strong>',
                                    ) ?>
                                </p>
                            </div>
                            <div class="modal-footer">
                                <form method="post" class="form form-inline form-delete">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">
                                        <?= $this->translate('Cancel') ?>
                                    </button>
                                    <button type="submit" class="btn btn-danger">
                                        <span class="far fa-trash-alt"></span>&nbsp;<?= $this->translate('Delete') ?>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="renameModal" tabindex="-1" role="dialog">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                                <h4 class="modal-title"><?= $this->translate('Rename Meeting Document') ?></h4>
                            </div>
                            <div class="modal-body">
                                <p><?= $this->translate('Enter a new name for this document:') ?></p>
                                <input type="text" name="name" placeholder="Name" class="form-control"
                                       id="new-document-name" form="form-rename">
                            </div>
                            <div class="modal-footer">
                                <form method="post" class="form form-inline form-rename" id="form-rename">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">
                                        <?= $this->translate('Cancel') ?>
                                    </button>
                                    <button type="submit" class="btn btn-success">
                                        <span class="fas fa-file-pen"></span>&nbsp;<?= $this->translate('Rename') ?>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            <?php endif; ?>
        </div>
    <?php endif; ?>
    <script nonce="<?= NONCE_REPLACEMENT_STRING ?>">
        var OrderableList = function ($list, itemContainerSelector) {
            var history = [];

            var findListItem = function (id) {
                return $('[data-id="' + id + '"]', $list).closest(itemContainerSelector);
            };

            /**
             * Adds an action to the history
             *
             * @param reverseFn Function name to reverse the action
             * @param parameter Parameter to reverse the action
             * @param predicate Predicate to determine if the history should be populated
             */
            var pushToHistory = function (reverseFn, parameter, predicate) {
                if (predicate) {
                    history.push({fn: reverseFn, parameter: parameter});
                }
            };

            return {
                /**
                 * Moves a list item upwards
                 *
                 * @param id List item ID
                 * @param history If the action should be recorded in the history, defaults to TRUE
                 */
                moveUp: function (id, history = true) {
                    var $listItem = findListItem(id),
                        inserted = $listItem.insertBefore($listItem.prev());

                    // jQuery returns the inserted element. Empty array if the item
                    // is already at the top.
                    var hasMoved = (inserted.length === 1);

                    pushToHistory('moveDown', id, (history && hasMoved));
                },
                /**
                 * Moves a list item downwards
                 *
                 * @param id List item ID
                 * @param history If the action should be recorded in the history, defaults to TRUE
                 */
                moveDown: function (id, history = true) {
                    var $listItem = findListItem(id),
                        inserted = $listItem.insertAfter($listItem.next());

                    // jQuery returns the inserted element. Empty array if the item
                    // is already at the bottom.
                    var hasMoved = (inserted.length === 1);

                    pushToHistory('moveUp', id, (history && hasMoved));
                },
                /**
                 * Reverses the last action
                 */
                reverseLastStep: function () {
                    var reverseAction = history[history.length - 1];

                    if (this.hasOwnProperty(reverseAction.fn)) {
                        history.pop(); // Remove last action from history

                        // Call function to reverse the last action
                        this[reverseAction.fn].apply(null, [reverseAction.parameter, false]);
                    }
                }
            };
        };

        var documentsList = new OrderableList($('.table-documents'), 'tr');

        $('.form-reorder-document label input[type=radio]').on('change', function () {
            var $radio = $(this),
                $form = $radio.closest('.form-reorder-document');

            // Disable all labels while processing
            $('.form-reorder-document label')
                .addClass('disabled')
                .find('input').not($radio).attr('disabled', 'disabled'); // Exclude $(this) so it's included in POST

            var documentID = $('input[name="document"]', $form).val();
            if ($radio.val() === 'up') {
                documentsList.moveUp(documentID);
            }
            if ($radio.val() === 'down') {
                documentsList.moveDown(documentID);
            }

            $.ajax({
                method: $form.attr('method'),
                url: $form.attr('action'),
                data: $form.serialize(),
                success: function () {
                    // Reset input to allow movement in the same direction
                    // Note that onChange event is not fire when unchecking
                    $radio.attr('checked', false);

                    // Done processing so allow reordering again
                    $('.form-reorder-document label')
                        .removeClass('disabled')
                        .find('input').removeAttr('disabled');
                },
                error: function (e) {
                    console.error("Something unexpected happened. Reordering the list failed.", JSON.parse(e.responseText));

                    documentsList.reverseLastStep();
                }
            });
        });

        document.getElementById('meeting-selector').addEventListener('change', e => {
            window.location = '<?= $this->url('admin_decision/document') ?>/' + e.target.value;
        });

        document.querySelectorAll('.btn-delete').forEach((element) => {
            element.addEventListener('click', () => {
                document.querySelector('#delete-document-name').textContent = element.dataset.documentName;
                document.querySelector('.form-delete').action = URLHelper.url(
                    'admin_decision/delete_document',
                    {'document_id': element.dataset.documentId},
                );
                $('#deleteModal').modal('show');
            })
        });

        document.querySelectorAll('.btn-rename').forEach((element) => {
            element.addEventListener('click', () => {
                document.querySelector('#new-document-name').value = element.dataset.documentName;
                document.querySelector('.form-rename').action = URLHelper.url(
                    'admin_decision/rename_document',
                    {'document_id': element.dataset.documentId},
                );
                $('#renameModal').modal('show');
            })
        });
    </script>
<?php endif; ?>
