<?php

use Decision\Model\BoardMember;
use Decision\Model\Member;

/* @var Member $member */

// set title
$this->headTitle($member->getFullName());
$this->headTitle($this->translate('Members'));
function getStartAssociationYear(DateTime $installDate): int
{
    $year = $installDate->format('Y');

    if ($installDate->format('m') < 7) {
        $year -= 1;
    }

    return $year;
}
?>
<section class="section">
    <div class="container">
        <h1><?= $member->getFullName() ?></h1>
        <div class="row">
            <div class="col-md-6">
                <table class="table table-bordered">
                    <?php if ($this->acl('decision_service_acl')->isAllowed('member', 'view_full')): ?>
                        <tr>
                            <th><?= $this->translate('Email') ?></th>
                            <td>
                                <?php if (null !== ($email = $member->getEmail())): ?>
                                    <?php $email = $this->escapeHtml($email); ?>
                                    <a href="mailto:<?= $email ?>"><?= $email ?></a>
                                <?php else: ?>
                                    <?= $this->translate('Unknown') ?>
                                <?php endif; ?>
                            </td>
                        </tr>
                    <?php endif; ?>
                    <tr>
                        <th><?= $this->translate('Birth date') ?></th>
                        <td><?= $member->getBirth()->format('l j F Y') ?></td>
                    </tr>
                    <tr>
                        <th><?= $this->translate('Generation') ?></th>
                        <td><?= $member->getGeneration() ?></td>
                    </tr>
                    <?php if ($this->acl('decision_service_acl')->isAllowed('member', 'view_full')): ?>
                        <tr>
                            <th><?= $this->translate('Membership type') ?></th>
                            <td><?= $member->getType()->getName($this->plugin('translate')->getTranslator()) ?></td>
                        </tr>
                        <tr>
                            <th><?= $this->translate('Has key code?') ?></th>
                            <td><?= $member->isKeyholder() ? $this->translate('Yes') : $this->translate('No') ?></td>
                        </tr>
                    <?php endif; ?>
                </table>
                <?php
                /* @var BoardMember[] $boardInstalls */
                $boardInstalls = array_reverse($member->getBoardInstallations()->toArray());
                if (!empty($boardInstalls)):
                    $start = new DateTime();
                    $start->setTime(0, 0);
                    $end = clone $start;

                    if ($start->format('m') >= 7) {;
                        $start->setDate((int) $start->format('Y'), 7, 1);
                        $end->setDate((int) $end->format('Y') + 1, 7, 1);
                    } else {
                        $start->setDate((int) $start->format('Y') - 1, 7, 1);
                        $end->setDate((int) $end->format('Y'), 7, 1);
                    }

                    $now = new DateTime('now');
                ?>
                    <h3>Board</h3>
                    <ul class="list-unstyled">
                    <?php foreach ($boardInstalls as $boardInstall): ?>
                        <?php $installDate = clone $boardInstall->getInstallDate(); ?>
                        <?php if ($now < $installDate): ?>
                            <li>
                                <?= sprintf(
                                    $this->translate('%s is the upcoming <strong>%s</strong>.'),
                                    $this->escapeHtml($member->getFirstName()),
                                    $this->escapeHtml($this->translate($boardInstall->getFunction())),
                                )?>
                            </li>
                        <?php elseif (
                            $start <= $installDate
                            && $now < $end
                            && (
                                null === $boardInstall->getReleaseDate()
                                || null === $boardInstall->getDischargeDate()
                            )
                        ):
                        ?>
                            <li>
                                <?= sprintf(
                                    $this->translate('%s is currently the <strong>%s</strong>.'),
                                    $this->escapeHtml($member->getFirstName()),
                                    $this->escapeHtml($this->translate($boardInstall->getFunction())),
                                ) ?>
                            </li>
                        <?php else: ?>
                            <?php $startAssociationYear = getStartAssociationYear($installDate); ?>
                            <li>
                                <?= sprintf(
                                    // phpcs:ignore -- user-visible strings should not be split
                                    $this->translate('%s was the <strong>%s</strong> during the association year %d/%d.'),
                                    $this->escapeHtml($member->getFirstName()),
                                    $this->escapeHtml($this->translate($boardInstall->getFunction())),
                                    $startAssociationYear,
                                    $startAssociationYear + 1,
                                ) ?>
                            </li>
                        <?php endif; ?>
                    <?php endforeach; ?>
                <br>
                <?php endif; ?>
                <h3><?= $this->translate('Memberships of committees and fraternities') ?></h3>
                <?php if (
                    empty($memberships['current'])
                    && empty($memberships['historical'])
                ): ?>
                    <p>
                        <?= sprintf(
                            $this->translate('%s has never been part of a committee or fraternity.'),
                            $member->getFirstName(),
                        ) ?>
                    </p>
                <?php endif; ?>
                <?php if (!empty($memberships['current'])): ?>
                    <p>
                        <?= sprintf(
                            $this->translate('%s is currently a member of:'),
                            $member->getFirstName(),
                        ) ?>
                    </p>
                    <ul>
                        <?php foreach ($memberships['current'] as $abbr => $install): ?>
                            <li>
                                <a href="<?= $this->url(
                                    'home/organ',
                                    [
                                        'type' => $install['organ']->getType()->value,
                                        'abbr' => $abbr,
                                    ],
                                ) ?>">
                                    <?= $abbr ?>
                                </a>
                                <?php if (!empty($install['functions'])): ?>
                                    (<?= implode(', ', $install['functions']) ?>)
                                <?php endif ?>
                            </li>
                        <?php endforeach; ?>
                    </ul>
                <?php endif; ?>
                <?php if (!empty($memberships['historical'])): ?>
                    <p>
                        <?= sprintf(
                            $this->translate('%s was a member of:'),
                            $member->getFirstName(),
                        ) ?>
                    </p>
                    <ul>
                        <?php foreach ($memberships['historical'] as $abbr => $install): ?>
                            <li>
                                <a href="<?= $this->url(
                                    'home/organ',
                                    [
                                        'type' => $install['organ']->getType()->value,
                                        'abbr' => $abbr,
                                    ],
                                ) ?>">
                                    <?= $abbr ?>
                                </a>
                                <?php if (!empty($install['functions'])): ?>
                                    (<?= implode(', ', $install['functions']) ?>)
                                <?php endif ?>
                            </li>
                        <?php endforeach; ?>
                    </ul>
                <?php endif; ?>
                <?php if ($this->acl('decision_service_acl')->isAllowed('member', 'view_full')): ?>
                    <h3><?= $this->translate('Addresses') ?></h3>
                    <?php foreach ($member->getAddresses() as $address): ?>
                        <h4><<?= $address->getType()->getName($this->plugin('translate')->getTranslator()) ?></h4>
                        <table class="table table-bordered">
                            <tr>
                                <th><?= $this->translate('Country') ?></th>
                                <td><?= $address->getCountry() ?></td>
                            </tr>
                            <tr>
                                <th><?= $this->translate('Street and number') ?></th>
                                <td><?= $address->getStreet() ?> <?= $address->getNumber() ?></td>
                            </tr>
                            <tr>
                                <th><?= $this->translate('City and postal code') ?></th>
                                <td><?= $address->getCity() ?> <?= $address->getPostalCode() ?></td>
                            </tr>
                        </table>
                    <?php endforeach ?>
                <?php endif; ?>
            </div>
            <div class="col-md-6">
                <?php if ($profilePhoto != null): ?>
                    <div class="row">
                        <div class="col-sm-12 col-xs-12">
                            <a class="thumbnail"
                               href="<?= $this->url(
                                   'photo/album',
                                   [
                                       'album_id' => $member->getLidnr(),
                                       'album_type' => 'member',
                                       'photo_id' => $profilePhoto->getId(),
                                   ],
                               ) ?>">
                                <?php
                                $pAspectRatio = $profilePhoto->getAspectRatio();

                                $pLargeWidth = $photoConfig['large_thumb_size']['width'];
                                $pLargeSize = [
                                    'w' => $pLargeWidth,
                                    'h' => round($pLargeWidth * $pAspectRatio)
                                ];
                                ?>
                                <img class="img-responsive"
                                     src="<?= $this->glideUrl()->getUrl($profilePhoto->getPath(), $pLargeSize) ?>"
                                     alt="">
                            </a>
                        </div>
                    </div>
                <?php endif; ?>
                <div class="row">
                    <div class="col-sm-6 col-xs-6">
                        <a class="panel panel-image"
                           href="<?= $this->url('photo/album',
                            [
                                'album_id' => $member->getLidnr(),
                                'album_type' => 'member',
                            ],
                        ) ?>">
                            <div class="panel-body">
                                <div class="far fa-image big-icon"></div>
                                <h4>
                                    <?= sprintf(
                                        $this->translate("Photo's of %s"),
                                        $this->escapeHtml($member->getFirstName()),
                                    ) ?>
                                </h4>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
