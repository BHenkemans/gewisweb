user                    www-data www-data;
worker_processes        auto;
error_log               /etc/nginx/logs/error.log;
pid                     /etc/nginx/nginx.pid;
worker_rlimit_nofile    65536;

events {
  worker_connections    8192;
}

http {
    include    /etc/nginx/mime.types;
    include    /etc/nginx/proxy.conf;
    include    /etc/nginx/fastcgi.conf;

    default_type application/octet-stream;
    server_names_hash_bucket_size 128;
    log_format scripts '$document_root$fastcgi_script_name > $request';

    sendfile            on;
    sendfile_max_chunk  1m;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_requests  1024;
    keepalive_timeout   120s;

    gzip                on;
    gzip_min_length     1000;
    gzip_buffers        4 8k;
    gzip_types          text/plain application/x-javascript text/css image/png image/jpeg image/gif image/x-icon image/svg+xml;
    gzip_vary           on;

    map $host $x_css_protection {
        default "1; mode=block";
    }

    map $host $x_content_type_options {
        default "nosniff";
    }

    map $host $referrer_policy {
        default "strict-origin-when-cross-origin";
    }

    map $host $permissions_policy {
        default 'accelerometer=("https://www.youtube-nocookie.com" "https://player.vimeo.com"), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), cross-origin-isolated=(), display-capture=(), document-domain=(), encrypted-media=("https://www.youtube-nocookie.com" "https://player.vimeo.com"), execution-while-not-rendered=(), execution-while-out-of-viewport=(), fullscreen=(self "https://www.youtube-nocookie.com" "https://player.vimeo.com"), geolocation=(), gyroscope=("https://www.youtube-nocookie.com" "https://player.vimeo.com"), keyboard-map=(), magnetometer=(), microphone=(), midi=(), navigation-override=(), payment=(), picture-in-picture=("https://www.youtube-nocookie.com" "https://player.vimeo.com"), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(), usb=(), web-share=(), xr-spatial-tracking=(), clipboard-write=(self), interest-cohort=()';
    }

    # Get the Content Security Policy.
    include /etc/nginx/csp.${APP_ENV}.conf;

    server {
        listen                  9200;
        listen                  [::]:9200;
        server_name             gewis.nl;
        charset                 utf-8;
        server_tokens           off;
        auth_basic              ${NGINX_REQUIRE_AUTH};
        auth_basic_user_file    /etc/nginx/.htpasswd;

        root /code/public;
        index index.php index.html index.htm;

        # if (-f $document_root/maintenance) {
        #     return 503;
        # }

        # error_page 503 @maintenance;
        # location @maintenance {
        #     rewrite ^(.*)$ /errors/maintenance.html break;
        # }

        location ~ ^/data/(images|img|javascript|js|css|fonts|flash|media|static|jpe?g|gif|ico|png|xml|otf|ttf|eot|woff|woff2|svg)/  {
            gzip_static                 on;
            etag                        on;
            add_header                  Cache-Control                       "private, max-age=2592000";
            add_header                  X-XSS-Protection                    $x_css_protection;
            add_header                  X-Content-Type-Options              $x_content_type_options;
            add_header                  Content-Security-Policy             $content_security_policy;
            add_header                  Referrer-Policy                     $referrer_policy;
            add_header                  Permissions-Policy                  $permissions_policy;
        }

        location /.well-known/security.txt  {
            gzip_static                 on;
            etag                        on;
            add_header                  Cache-Control                       "private, max-age=2592000";
            add_header                  X-XSS-Protection                    $x_css_protection;
            add_header                  X-Content-Type-Options              $x_content_type_options;
            add_header                  Content-Security-Policy             $content_security_policy;
            add_header                  Referrer-Policy                     $referrer_policy;
            add_header                  Permissions-Policy                  $permissions_policy;
        }

        location ~ ^/(images|img|javascript|js|css|fonts|flash|media|static|jpe?g|gif|ico|png|xml|otf|ttf|eot|woff|woff2|svg)/  {
            gzip_static                 on;
            etag                        on;
            add_header                  Cache-Control                       "public, max-age=86400";
            add_header                  X-XSS-Protection                    $x_css_protection;
            add_header                  X-Content-Type-Options              $x_content_type_options;
            add_header                  Content-Security-Policy             $content_security_policy;
            add_header                  Referrer-Policy                     $referrer_policy;
            add_header                  Permissions-Policy                  $permissions_policy;
        }

        location / {
            try_files   $uri    $uri/   /index.php$is_args$args;
        }

        location ~ \.php$ {
            # access_log /etc/nginx/logs/web.log scripts; # This line is useful for debugging routing errors between nginx and web
            fastcgi_pass                web:9000;
            fastcgi_hide_header         Expires;
            fastcgi_hide_header         Pragma;
            fastcgi_hide_header         Cache-Control;
            fastcgi_keep_conn           on;
            add_header                  Cache-Control                       "private, no-cache";
            add_header                  X-XSS-Protection                    $x_css_protection;
            add_header                  X-Content-Type-Options              $x_content_type_options;
            add_header                  Content-Security-Policy             $content_security_policy;
            add_header                  Referrer-Policy                     $referrer_policy;
            add_header                  Permissions-Policy                  $permissions_policy;

            # Replace the nonce tag with an actual nonce.
            sub_filter_once off;
            sub_filter_last_modified on;
            sub_filter ${NONCE_REPLACEMENT_STRING} $request_id;
        }
    }

    server {
        listen                  9201;
        listen                  [::]:9201;
        server_name             images.gewis.nl;
        charset                 utf-8;
        server_tokens           off;
        auth_basic              ${NGINX_REQUIRE_AUTH};
        auth_basic_user_file    /etc/nginx/.htpasswd;

        root /glide/public;
        index index.php index.html index.htm;

        location / {
            try_files   $uri    $uri/   /index.php$is_args$args;
        }

        location ~ \.php$ {
            # access_log /etc/nginx/logs/glide.log scripts; # This line is useful for debugging routing errors between nginx and glide
            fastcgi_pass                glide:9000;
            fastcgi_hide_header         Cache-Control;
            fastcgi_hide_header         Expires;
            fastcgi_keep_conn           on;
            gzip_static                 on;
            etag                        on;
            add_header                  Cache-Control                       "private, max-age=2592000";
            add_header                  X-XSS-Protection                    $x_css_protection;
            add_header                  X-Content-Type-Options              $x_content_type_options;
            add_header                  Content-Security-Policy             $content_security_policy;
            add_header                  Referrer-Policy                     $referrer_policy;
            add_header                  Permissions-Policy                  $permissions_policy;
        }
    }

    server {
        listen                  9202;
        listen                  [::]:9202;
        server_name             analytics.gewis.nl;
        charset                 utf-8;
        server_tokens           off;
        auth_basic              ${NGINX_REQUIRE_AUTH};
        auth_basic_user_file    /etc/nginx/.htpasswd;

        root /var/www/html;
        index index.php;

        location ~ ^/(index|matomo|piwik|js/index)\.php$ {
            # access_log /etc/nginx/logs/matomo.log scripts; # This line is useful for debugging routing errors between nginx and matomo
            fastcgi_pass                matomo:9000;
            fastcgi_hide_header         Cache-Control;
            fastcgi_hide_header         Expires;
            fastcgi_keep_conn           on;
            add_header                  X-XSS-Protection                    $x_css_protection;
            add_header                  Referrer-Policy                     $referrer_policy;
        }

        location ~* ^.+\.php$ {
            deny all;
            return 403;
        }

        location / {
            try_files $uri $uri/ =404;
        }

        location ~ ^/(config|tmp|core|lang) {
            deny all;
            return 403;
        }

        location ~ /\.ht {
            deny  all;
            return 403;
        }

        location ~ js/container_.*_preview\.js$ {
            expires off;
            add_header                  Cache-Control                       'private, no-cache, no-store';
            add_header                  X-XSS-Protection                    $x_css_protection;
            add_header                  Referrer-Policy                     $referrer_policy;
        }

        location ~ \.(gif|ico|jpg|png|svg|js|css|htm|html|mp3|mp4|wav|ogg|avi|ttf|eot|woff|woff2|json)$ {
            allow all;
            expires 1h;
            add_header                  Pragma                              public;
            add_header                  Cache-Control                       "public";
            add_header                  X-XSS-Protection                    $x_css_protection;
            add_header                  Referrer-Policy                     $referrer_policy;
        }

        location ~ ^/(libs|vendor|plugins|misc|node_modules) {
            deny all;
            return 403;
        }

        location ~/(.*\.md|LEGALNOTICE|LICENSE) {
            default_type text/plain;
        }
    }
}
